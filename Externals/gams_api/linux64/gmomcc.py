# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_gmomcc', [dirname(__file__)])
        except ImportError:
            import _gmomcc
            return _gmomcc
        if fp is not None:
            try:
                _mod = imp.load_module('_gmomcc', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _gmomcc = swig_import_helper()
    del swig_import_helper
else:
    import _gmomcc
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


gmoequ_E = _gmomcc.gmoequ_E
gmoequ_G = _gmomcc.gmoequ_G
gmoequ_L = _gmomcc.gmoequ_L
gmoequ_N = _gmomcc.gmoequ_N
gmoequ_X = _gmomcc.gmoequ_X
gmoequ_C = _gmomcc.gmoequ_C
gmoequ_B = _gmomcc.gmoequ_B
gmovar_X = _gmomcc.gmovar_X
gmovar_B = _gmomcc.gmovar_B
gmovar_I = _gmomcc.gmovar_I
gmovar_S1 = _gmomcc.gmovar_S1
gmovar_S2 = _gmomcc.gmovar_S2
gmovar_SC = _gmomcc.gmovar_SC
gmovar_SI = _gmomcc.gmovar_SI
gmoorder_ERR = _gmomcc.gmoorder_ERR
gmoorder_L = _gmomcc.gmoorder_L
gmoorder_Q = _gmomcc.gmoorder_Q
gmoorder_NL = _gmomcc.gmoorder_NL
gmovar_X_F = _gmomcc.gmovar_X_F
gmovar_X_N = _gmomcc.gmovar_X_N
gmovar_X_P = _gmomcc.gmovar_X_P
gmoBstat_Lower = _gmomcc.gmoBstat_Lower
gmoBstat_Upper = _gmomcc.gmoBstat_Upper
gmoBstat_Basic = _gmomcc.gmoBstat_Basic
gmoBstat_Super = _gmomcc.gmoBstat_Super
gmoCstat_OK = _gmomcc.gmoCstat_OK
gmoCstat_NonOpt = _gmomcc.gmoCstat_NonOpt
gmoCstat_Infeas = _gmomcc.gmoCstat_Infeas
gmoCstat_UnBnd = _gmomcc.gmoCstat_UnBnd
gmoObjType_Var = _gmomcc.gmoObjType_Var
gmoObjType_Fun = _gmomcc.gmoObjType_Fun
gmoIFace_Processed = _gmomcc.gmoIFace_Processed
gmoIFace_Raw = _gmomcc.gmoIFace_Raw
gmoObj_Min = _gmomcc.gmoObj_Min
gmoObj_Max = _gmomcc.gmoObj_Max
gmoSolveStat_Normal = _gmomcc.gmoSolveStat_Normal
gmoSolveStat_Iteration = _gmomcc.gmoSolveStat_Iteration
gmoSolveStat_Resource = _gmomcc.gmoSolveStat_Resource
gmoSolveStat_Solver = _gmomcc.gmoSolveStat_Solver
gmoSolveStat_EvalError = _gmomcc.gmoSolveStat_EvalError
gmoSolveStat_Capability = _gmomcc.gmoSolveStat_Capability
gmoSolveStat_License = _gmomcc.gmoSolveStat_License
gmoSolveStat_User = _gmomcc.gmoSolveStat_User
gmoSolveStat_SetupErr = _gmomcc.gmoSolveStat_SetupErr
gmoSolveStat_SolverErr = _gmomcc.gmoSolveStat_SolverErr
gmoSolveStat_InternalErr = _gmomcc.gmoSolveStat_InternalErr
gmoSolveStat_Skipped = _gmomcc.gmoSolveStat_Skipped
gmoSolveStat_SystemErr = _gmomcc.gmoSolveStat_SystemErr
gmoModelStat_OptimalGlobal = _gmomcc.gmoModelStat_OptimalGlobal
gmoModelStat_OptimalLocal = _gmomcc.gmoModelStat_OptimalLocal
gmoModelStat_Unbounded = _gmomcc.gmoModelStat_Unbounded
gmoModelStat_InfeasibleGlobal = _gmomcc.gmoModelStat_InfeasibleGlobal
gmoModelStat_InfeasibleLocal = _gmomcc.gmoModelStat_InfeasibleLocal
gmoModelStat_InfeasibleIntermed = _gmomcc.gmoModelStat_InfeasibleIntermed
gmoModelStat_Feasible = _gmomcc.gmoModelStat_Feasible
gmoModelStat_Integer = _gmomcc.gmoModelStat_Integer
gmoModelStat_NonIntegerIntermed = _gmomcc.gmoModelStat_NonIntegerIntermed
gmoModelStat_IntegerInfeasible = _gmomcc.gmoModelStat_IntegerInfeasible
gmoModelStat_LicenseError = _gmomcc.gmoModelStat_LicenseError
gmoModelStat_ErrorUnknown = _gmomcc.gmoModelStat_ErrorUnknown
gmoModelStat_ErrorNoSolution = _gmomcc.gmoModelStat_ErrorNoSolution
gmoModelStat_NoSolutionReturned = _gmomcc.gmoModelStat_NoSolutionReturned
gmoModelStat_SolvedUnique = _gmomcc.gmoModelStat_SolvedUnique
gmoModelStat_Solved = _gmomcc.gmoModelStat_Solved
gmoModelStat_SolvedSingular = _gmomcc.gmoModelStat_SolvedSingular
gmoModelStat_UnboundedNoSolution = _gmomcc.gmoModelStat_UnboundedNoSolution
gmoModelStat_InfeasibleNoSolution = _gmomcc.gmoModelStat_InfeasibleNoSolution
gmoHiterused = _gmomcc.gmoHiterused
gmoHresused = _gmomcc.gmoHresused
gmoHobjval = _gmomcc.gmoHobjval
gmoHdomused = _gmomcc.gmoHdomused
gmoHmarginals = _gmomcc.gmoHmarginals
gmoHetalg = _gmomcc.gmoHetalg
gmoTmipnod = _gmomcc.gmoTmipnod
gmoTninf = _gmomcc.gmoTninf
gmoTnopt = _gmomcc.gmoTnopt
gmoTmipbest = _gmomcc.gmoTmipbest
gmoTsinf = _gmomcc.gmoTsinf
gmoTrobj = _gmomcc.gmoTrobj
gmonumheader = _gmomcc.gmonumheader
gmonumtail = _gmomcc.gmonumtail
gmoProc_none = _gmomcc.gmoProc_none
gmoProc_lp = _gmomcc.gmoProc_lp
gmoProc_mip = _gmomcc.gmoProc_mip
gmoProc_rmip = _gmomcc.gmoProc_rmip
gmoProc_nlp = _gmomcc.gmoProc_nlp
gmoProc_mcp = _gmomcc.gmoProc_mcp
gmoProc_mpec = _gmomcc.gmoProc_mpec
gmoProc_rmpec = _gmomcc.gmoProc_rmpec
gmoProc_cns = _gmomcc.gmoProc_cns
gmoProc_dnlp = _gmomcc.gmoProc_dnlp
gmoProc_rminlp = _gmomcc.gmoProc_rminlp
gmoProc_minlp = _gmomcc.gmoProc_minlp
gmoProc_qcp = _gmomcc.gmoProc_qcp
gmoProc_miqcp = _gmomcc.gmoProc_miqcp
gmoProc_rmiqcp = _gmomcc.gmoProc_rmiqcp
gmoProc_emp = _gmomcc.gmoProc_emp
gmoProc_nrofmodeltypes = _gmomcc.gmoProc_nrofmodeltypes
gmoMinAgent = _gmomcc.gmoMinAgent
gmoMaxAgent = _gmomcc.gmoMaxAgent
gmoVIAgent = _gmomcc.gmoVIAgent
gmoEVALERRORMETHOD_KEEPGOING = _gmomcc.gmoEVALERRORMETHOD_KEEPGOING
gmoEVALERRORMETHOD_FASTSTOP = _gmomcc.gmoEVALERRORMETHOD_FASTSTOP
class intArray(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, intArray, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, intArray, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _gmomcc.new_intArray(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _gmomcc.delete_intArray
    __del__ = lambda self : None;
    def __getitem__(self, *args): return _gmomcc.intArray___getitem__(self, *args)
    def __setitem__(self, *args): return _gmomcc.intArray___setitem__(self, *args)
    def cast(self): return _gmomcc.intArray_cast(self)
    __swig_getmethods__["frompointer"] = lambda x: _gmomcc.intArray_frompointer
    if _newclass:frompointer = staticmethod(_gmomcc.intArray_frompointer)
intArray_swigregister = _gmomcc.intArray_swigregister
intArray_swigregister(intArray)

def intArray_frompointer(*args):
  return _gmomcc.intArray_frompointer(*args)
intArray_frompointer = _gmomcc.intArray_frompointer

class doubleArray(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, doubleArray, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, doubleArray, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _gmomcc.new_doubleArray(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _gmomcc.delete_doubleArray
    __del__ = lambda self : None;
    def __getitem__(self, *args): return _gmomcc.doubleArray___getitem__(self, *args)
    def __setitem__(self, *args): return _gmomcc.doubleArray___setitem__(self, *args)
    def cast(self): return _gmomcc.doubleArray_cast(self)
    __swig_getmethods__["frompointer"] = lambda x: _gmomcc.doubleArray_frompointer
    if _newclass:frompointer = staticmethod(_gmomcc.doubleArray_frompointer)
doubleArray_swigregister = _gmomcc.doubleArray_swigregister
doubleArray_swigregister(doubleArray)

def doubleArray_frompointer(*args):
  return _gmomcc.doubleArray_frompointer(*args)
doubleArray_frompointer = _gmomcc.doubleArray_frompointer


def new_intp():
  return _gmomcc.new_intp()
new_intp = _gmomcc.new_intp

def copy_intp(*args):
  return _gmomcc.copy_intp(*args)
copy_intp = _gmomcc.copy_intp

def delete_intp(*args):
  return _gmomcc.delete_intp(*args)
delete_intp = _gmomcc.delete_intp

def intp_assign(*args):
  return _gmomcc.intp_assign(*args)
intp_assign = _gmomcc.intp_assign

def intp_value(*args):
  return _gmomcc.intp_value(*args)
intp_value = _gmomcc.intp_value

def new_doublep():
  return _gmomcc.new_doublep()
new_doublep = _gmomcc.new_doublep

def copy_doublep(*args):
  return _gmomcc.copy_doublep(*args)
copy_doublep = _gmomcc.copy_doublep

def delete_doublep(*args):
  return _gmomcc.delete_doublep(*args)
delete_doublep = _gmomcc.delete_doublep

def doublep_assign(*args):
  return _gmomcc.doublep_assign(*args)
doublep_assign = _gmomcc.doublep_assign

def doublep_value(*args):
  return _gmomcc.doublep_value(*args)
doublep_value = _gmomcc.doublep_value

def new_gmoHandle_tp():
  return _gmomcc.new_gmoHandle_tp()
new_gmoHandle_tp = _gmomcc.new_gmoHandle_tp

def copy_gmoHandle_tp(*args):
  return _gmomcc.copy_gmoHandle_tp(*args)
copy_gmoHandle_tp = _gmomcc.copy_gmoHandle_tp

def delete_gmoHandle_tp(*args):
  return _gmomcc.delete_gmoHandle_tp(*args)
delete_gmoHandle_tp = _gmomcc.delete_gmoHandle_tp

def gmoHandle_tp_assign(*args):
  return _gmomcc.gmoHandle_tp_assign(*args)
gmoHandle_tp_assign = _gmomcc.gmoHandle_tp_assign

def gmoHandle_tp_value(*args):
  return _gmomcc.gmoHandle_tp_value(*args)
gmoHandle_tp_value = _gmomcc.gmoHandle_tp_value

def gmoHandleToPtr(*args):
  """gmoHandleToPtr(pgmo) -> void *"""
  return _gmomcc.gmoHandleToPtr(*args)

def ptrTogmoHandle(*args):
  """ptrTogmoHandle(vptr) -> gmoHandle_t"""
  return _gmomcc.ptrTogmoHandle(*args)

def gmoGetReady(*args):
  """gmoGetReady(msgBufSize) -> int"""
  return _gmomcc.gmoGetReady(*args)

def gmoGetReadyD(*args):
  """gmoGetReadyD(dirName, msgBufSize) -> int"""
  return _gmomcc.gmoGetReadyD(*args)

def gmoGetReadyL(*args):
  """gmoGetReadyL(libName, msgBufSize) -> int"""
  return _gmomcc.gmoGetReadyL(*args)

def gmoCreate(*args):
  """gmoCreate(pgmo, msgBufSize) -> int"""
  return _gmomcc.gmoCreate(*args)

def gmoCreateD(*args):
  """gmoCreateD(pgmo, dirName, msgBufSize) -> int"""
  return _gmomcc.gmoCreateD(*args)

def gmoCreateDD(*args):
  """gmoCreateDD(pgmo, dirName, msgBufSize) -> int"""
  return _gmomcc.gmoCreateDD(*args)

def gmoCreateL(*args):
  """gmoCreateL(pgmo, libName, msgBufSize) -> int"""
  return _gmomcc.gmoCreateL(*args)

def gmoFree(*args):
  """gmoFree(pgmo) -> int"""
  return _gmomcc.gmoFree(*args)

def gmoLibraryLoaded():
  """gmoLibraryLoaded() -> int"""
  return _gmomcc.gmoLibraryLoaded()

def gmoLibraryUnload():
  """gmoLibraryUnload() -> int"""
  return _gmomcc.gmoLibraryUnload()

def gmoGetScreenIndicator():
  """gmoGetScreenIndicator() -> int"""
  return _gmomcc.gmoGetScreenIndicator()

def gmoSetScreenIndicator(*args):
  """gmoSetScreenIndicator(scrind)"""
  return _gmomcc.gmoSetScreenIndicator(*args)

def gmoGetExceptionIndicator():
  """gmoGetExceptionIndicator() -> int"""
  return _gmomcc.gmoGetExceptionIndicator()

def gmoSetExceptionIndicator(*args):
  """gmoSetExceptionIndicator(excind)"""
  return _gmomcc.gmoSetExceptionIndicator(*args)

def gmoGetExitIndicator():
  """gmoGetExitIndicator() -> int"""
  return _gmomcc.gmoGetExitIndicator()

def gmoSetExitIndicator(*args):
  """gmoSetExitIndicator(extind)"""
  return _gmomcc.gmoSetExitIndicator(*args)

def gmoGetErrorCallback():
  """gmoGetErrorCallback() -> gmoErrorCallback_t"""
  return _gmomcc.gmoGetErrorCallback()

def gmoSetErrorCallback(*args):
  """gmoSetErrorCallback(func)"""
  return _gmomcc.gmoSetErrorCallback(*args)

def gmoGetAPIErrorCount():
  """gmoGetAPIErrorCount() -> int"""
  return _gmomcc.gmoGetAPIErrorCount()

def gmoSetAPIErrorCount(*args):
  """gmoSetAPIErrorCount(ecnt)"""
  return _gmomcc.gmoSetAPIErrorCount(*args)

def gmoErrorHandling(*args):
  """gmoErrorHandling(msg)"""
  return _gmomcc.gmoErrorHandling(*args)

def gmoInitData(*args):
  """gmoInitData(pgmo, rows, cols, codelen) -> int"""
  return _gmomcc.gmoInitData(*args)

def gmoAddRow(*args):
  """gmoAddRow(pgmo, etyp, ematch, eslack, escale, erhs, emarg, ebas, enz, colidx, jacval, nlflag) -> int"""
  return _gmomcc.gmoAddRow(*args)

def gmoAddCol(*args):
  """
    gmoAddCol(pgmo, vtyp, vlo, vl, vup, vmarg, vbas, vsos, vprior, vscale, vnz, rowidx, jacval, 
        nlflag) -> int
    """
  return _gmomcc.gmoAddCol(*args)

def gmoCompleteData(*args):
  """gmoCompleteData(pgmo) -> int"""
  return _gmomcc.gmoCompleteData(*args)

def gmoLoadDataLegacy(*args):
  """gmoLoadDataLegacy(pgmo) -> int"""
  return _gmomcc.gmoLoadDataLegacy(*args)

def gmoRegisterEnvironment(*args):
  """gmoRegisterEnvironment(pgmo, gevptr) -> int"""
  return _gmomcc.gmoRegisterEnvironment(*args)

def gmoEnvironment(*args):
  """gmoEnvironment(pgmo) -> void *"""
  return _gmomcc.gmoEnvironment(*args)

def gmoViewStore(*args):
  """gmoViewStore(pgmo) -> void *"""
  return _gmomcc.gmoViewStore(*args)

def gmoViewRestore(*args):
  """gmoViewRestore(pgmo, viewptr)"""
  return _gmomcc.gmoViewRestore(*args)

def gmoViewDump(*args):
  """gmoViewDump(pgmo)"""
  return _gmomcc.gmoViewDump(*args)

def gmoGetiSolver(*args):
  """gmoGetiSolver(pgmo, mi) -> int"""
  return _gmomcc.gmoGetiSolver(*args)

def gmoGetjSolver(*args):
  """gmoGetjSolver(pgmo, mj) -> int"""
  return _gmomcc.gmoGetjSolver(*args)

def gmoGetiModel(*args):
  """gmoGetiModel(pgmo, si) -> int"""
  return _gmomcc.gmoGetiModel(*args)

def gmoGetjModel(*args):
  """gmoGetjModel(pgmo, sj) -> int"""
  return _gmomcc.gmoGetjModel(*args)

def gmoSetEquPermutation(*args):
  """gmoSetEquPermutation(pgmo, permut) -> int"""
  return _gmomcc.gmoSetEquPermutation(*args)

def gmoSetRvEquPermutation(*args):
  """gmoSetRvEquPermutation(pgmo, rvpermut, len) -> int"""
  return _gmomcc.gmoSetRvEquPermutation(*args)

def gmoSetVarPermutation(*args):
  """gmoSetVarPermutation(pgmo, permut) -> int"""
  return _gmomcc.gmoSetVarPermutation(*args)

def gmoSetRvVarPermutation(*args):
  """gmoSetRvVarPermutation(pgmo, rvpermut, len) -> int"""
  return _gmomcc.gmoSetRvVarPermutation(*args)

def gmoSetNRowPerm(*args):
  """gmoSetNRowPerm(pgmo) -> int"""
  return _gmomcc.gmoSetNRowPerm(*args)

def gmoGetVarTypeCnt(*args):
  """gmoGetVarTypeCnt(pgmo, vtyp) -> int"""
  return _gmomcc.gmoGetVarTypeCnt(*args)

def gmoGetEquTypeCnt(*args):
  """gmoGetEquTypeCnt(pgmo, etyp) -> int"""
  return _gmomcc.gmoGetEquTypeCnt(*args)

def gmoGetObjStat(*args):
  """gmoGetObjStat(pgmo) -> int"""
  return _gmomcc.gmoGetObjStat(*args)

def gmoGetRowStat(*args):
  """gmoGetRowStat(pgmo, si) -> int"""
  return _gmomcc.gmoGetRowStat(*args)

def gmoGetColStat(*args):
  """gmoGetColStat(pgmo, sj) -> int"""
  return _gmomcc.gmoGetColStat(*args)

def gmoGetRowQNZOne(*args):
  """gmoGetRowQNZOne(pgmo, si) -> int"""
  return _gmomcc.gmoGetRowQNZOne(*args)

def gmoGetRowQDiagNZOne(*args):
  """gmoGetRowQDiagNZOne(pgmo, si) -> int"""
  return _gmomcc.gmoGetRowQDiagNZOne(*args)

def gmoGetSosCounts(*args):
  """gmoGetSosCounts(pgmo)"""
  return _gmomcc.gmoGetSosCounts(*args)

def gmoGetXLibCounts(*args):
  """gmoGetXLibCounts(pgmo, orgcolind)"""
  return _gmomcc.gmoGetXLibCounts(*args)

def gmoGetActiveModelType(*args):
  """gmoGetActiveModelType(pgmo, checkv) -> int"""
  return _gmomcc.gmoGetActiveModelType(*args)

def gmoGetMatrixRow(*args):
  """gmoGetMatrixRow(pgmo, rowstart, colidx, jacval, nlflag) -> int"""
  return _gmomcc.gmoGetMatrixRow(*args)

def gmoGetMatrixCol(*args):
  """gmoGetMatrixCol(pgmo, colstart, rowidx, jacval, nlflag) -> int"""
  return _gmomcc.gmoGetMatrixCol(*args)

def gmoGetMatrixCplex(*args):
  """gmoGetMatrixCplex(pgmo, colstart, collength, rowidx, jacval) -> int"""
  return _gmomcc.gmoGetMatrixCplex(*args)

def gmoGetObjName(*args):
  """gmoGetObjName(pgmo) -> char *"""
  return _gmomcc.gmoGetObjName(*args)

def gmoGetObjNameCustom(*args):
  """gmoGetObjNameCustom(pgmo, suffix) -> char *"""
  return _gmomcc.gmoGetObjNameCustom(*args)

def gmoGetObjVector(*args):
  """gmoGetObjVector(pgmo, jacval, nlflag) -> int"""
  return _gmomcc.gmoGetObjVector(*args)

def gmoGetObjSparse(*args):
  """gmoGetObjSparse(pgmo, colidx, jacval, nlflag) -> int"""
  return _gmomcc.gmoGetObjSparse(*args)

def gmoGetObjQ(*args):
  """gmoGetObjQ(pgmo, colidx, rowidx, jacval) -> int"""
  return _gmomcc.gmoGetObjQ(*args)

def gmoGetEquL(*args):
  """gmoGetEquL(pgmo, e) -> int"""
  return _gmomcc.gmoGetEquL(*args)

def gmoGetEquLOne(*args):
  """gmoGetEquLOne(pgmo, si) -> double"""
  return _gmomcc.gmoGetEquLOne(*args)

def gmoSetEquL(*args):
  """gmoSetEquL(pgmo, el) -> int"""
  return _gmomcc.gmoSetEquL(*args)

def gmoSetEquLOne(*args):
  """gmoSetEquLOne(pgmo, si, el)"""
  return _gmomcc.gmoSetEquLOne(*args)

def gmoGetEquM(*args):
  """gmoGetEquM(pgmo, pi) -> int"""
  return _gmomcc.gmoGetEquM(*args)

def gmoGetEquMOne(*args):
  """gmoGetEquMOne(pgmo, si) -> double"""
  return _gmomcc.gmoGetEquMOne(*args)

def gmoSetEquM(*args):
  """gmoSetEquM(pgmo, emarg) -> int"""
  return _gmomcc.gmoSetEquM(*args)

def gmoGetEquNameOne(*args):
  """gmoGetEquNameOne(pgmo, si) -> char *"""
  return _gmomcc.gmoGetEquNameOne(*args)

def gmoGetEquNameCustomOne(*args):
  """gmoGetEquNameCustomOne(pgmo, si, suffix) -> char *"""
  return _gmomcc.gmoGetEquNameCustomOne(*args)

def gmoGetRhs(*args):
  """gmoGetRhs(pgmo, mdblvec) -> int"""
  return _gmomcc.gmoGetRhs(*args)

def gmoGetRhsOne(*args):
  """gmoGetRhsOne(pgmo, si) -> double"""
  return _gmomcc.gmoGetRhsOne(*args)

def gmoSetAltRHS(*args):
  """gmoSetAltRHS(pgmo, mdblvec) -> int"""
  return _gmomcc.gmoSetAltRHS(*args)

def gmoSetAltRHSOne(*args):
  """gmoSetAltRHSOne(pgmo, si, erhs)"""
  return _gmomcc.gmoSetAltRHSOne(*args)

def gmoGetEquSlack(*args):
  """gmoGetEquSlack(pgmo, mdblvec) -> int"""
  return _gmomcc.gmoGetEquSlack(*args)

def gmoGetEquSlackOne(*args):
  """gmoGetEquSlackOne(pgmo, si) -> double"""
  return _gmomcc.gmoGetEquSlackOne(*args)

def gmoSetEquSlack(*args):
  """gmoSetEquSlack(pgmo, mdblvec) -> int"""
  return _gmomcc.gmoSetEquSlack(*args)

def gmoGetEquType(*args):
  """gmoGetEquType(pgmo, mintvec) -> int"""
  return _gmomcc.gmoGetEquType(*args)

def gmoGetEquTypeOne(*args):
  """gmoGetEquTypeOne(pgmo, si) -> int"""
  return _gmomcc.gmoGetEquTypeOne(*args)

def gmoGetEquStat(*args):
  """gmoGetEquStat(pgmo, mintvec)"""
  return _gmomcc.gmoGetEquStat(*args)

def gmoGetEquStatOne(*args):
  """gmoGetEquStatOne(pgmo, si) -> int"""
  return _gmomcc.gmoGetEquStatOne(*args)

def gmoSetEquStat(*args):
  """gmoSetEquStat(pgmo, mintvec)"""
  return _gmomcc.gmoSetEquStat(*args)

def gmoGetEquCStat(*args):
  """gmoGetEquCStat(pgmo, mintvec)"""
  return _gmomcc.gmoGetEquCStat(*args)

def gmoGetEquCStatOne(*args):
  """gmoGetEquCStatOne(pgmo, si) -> int"""
  return _gmomcc.gmoGetEquCStatOne(*args)

def gmoSetEquCStat(*args):
  """gmoSetEquCStat(pgmo, mintvec)"""
  return _gmomcc.gmoSetEquCStat(*args)

def gmoGetEquMatch(*args):
  """gmoGetEquMatch(pgmo, mintvec) -> int"""
  return _gmomcc.gmoGetEquMatch(*args)

def gmoGetEquMatchOne(*args):
  """gmoGetEquMatchOne(pgmo, si) -> int"""
  return _gmomcc.gmoGetEquMatchOne(*args)

def gmoGetEquScale(*args):
  """gmoGetEquScale(pgmo, mdblvec) -> int"""
  return _gmomcc.gmoGetEquScale(*args)

def gmoGetEquScaleOne(*args):
  """gmoGetEquScaleOne(pgmo, si) -> double"""
  return _gmomcc.gmoGetEquScaleOne(*args)

def gmoGetEquStageOne(*args):
  """gmoGetEquStageOne(pgmo, si) -> double"""
  return _gmomcc.gmoGetEquStageOne(*args)

def gmoGetEquOrderOne(*args):
  """gmoGetEquOrderOne(pgmo, si) -> int"""
  return _gmomcc.gmoGetEquOrderOne(*args)

def gmoGetRowSparse(*args):
  """gmoGetRowSparse(pgmo, si, colidx, jacval, nlflag) -> int"""
  return _gmomcc.gmoGetRowSparse(*args)

def gmoGetRowJacInfoOne(*args):
  """gmoGetRowJacInfoOne(pgmo, si, jacptr)"""
  return _gmomcc.gmoGetRowJacInfoOne(*args)

def gmoGetRowQ(*args):
  """gmoGetRowQ(pgmo, si, colidx, rowidx, jacval) -> int"""
  return _gmomcc.gmoGetRowQ(*args)

def gmoGetEquIntDotOpt(*args):
  """gmoGetEquIntDotOpt(pgmo, optptr, dotopt, optvals) -> int"""
  return _gmomcc.gmoGetEquIntDotOpt(*args)

def gmoGetEquDblDotOpt(*args):
  """gmoGetEquDblDotOpt(pgmo, optptr, dotopt, optvals) -> int"""
  return _gmomcc.gmoGetEquDblDotOpt(*args)

def gmoGetVarL(*args):
  """gmoGetVarL(pgmo, x) -> int"""
  return _gmomcc.gmoGetVarL(*args)

def gmoGetVarLOne(*args):
  """gmoGetVarLOne(pgmo, sj) -> double"""
  return _gmomcc.gmoGetVarLOne(*args)

def gmoSetVarL(*args):
  """gmoSetVarL(pgmo, x) -> int"""
  return _gmomcc.gmoSetVarL(*args)

def gmoSetVarLOne(*args):
  """gmoSetVarLOne(pgmo, sj, vl)"""
  return _gmomcc.gmoSetVarLOne(*args)

def gmoGetVarM(*args):
  """gmoGetVarM(pgmo, dj) -> int"""
  return _gmomcc.gmoGetVarM(*args)

def gmoGetVarMOne(*args):
  """gmoGetVarMOne(pgmo, sj) -> double"""
  return _gmomcc.gmoGetVarMOne(*args)

def gmoSetVarM(*args):
  """gmoSetVarM(pgmo, dj) -> int"""
  return _gmomcc.gmoSetVarM(*args)

def gmoGetVarNameOne(*args):
  """gmoGetVarNameOne(pgmo, sj) -> char *"""
  return _gmomcc.gmoGetVarNameOne(*args)

def gmoGetVarNameCustomOne(*args):
  """gmoGetVarNameCustomOne(pgmo, sj, suffix) -> char *"""
  return _gmomcc.gmoGetVarNameCustomOne(*args)

def gmoGetVarLower(*args):
  """gmoGetVarLower(pgmo, lovec) -> int"""
  return _gmomcc.gmoGetVarLower(*args)

def gmoGetVarLowerOne(*args):
  """gmoGetVarLowerOne(pgmo, sj) -> double"""
  return _gmomcc.gmoGetVarLowerOne(*args)

def gmoGetVarUpper(*args):
  """gmoGetVarUpper(pgmo, upvec) -> int"""
  return _gmomcc.gmoGetVarUpper(*args)

def gmoGetVarUpperOne(*args):
  """gmoGetVarUpperOne(pgmo, sj) -> double"""
  return _gmomcc.gmoGetVarUpperOne(*args)

def gmoSetAltVarBounds(*args):
  """gmoSetAltVarBounds(pgmo, lovec, upvec) -> int"""
  return _gmomcc.gmoSetAltVarBounds(*args)

def gmoSetAltVarLowerOne(*args):
  """gmoSetAltVarLowerOne(pgmo, sj, vlo)"""
  return _gmomcc.gmoSetAltVarLowerOne(*args)

def gmoSetAltVarUpperOne(*args):
  """gmoSetAltVarUpperOne(pgmo, sj, vup)"""
  return _gmomcc.gmoSetAltVarUpperOne(*args)

def gmoGetVarType(*args):
  """gmoGetVarType(pgmo, nintvec) -> int"""
  return _gmomcc.gmoGetVarType(*args)

def gmoGetVarTypeOne(*args):
  """gmoGetVarTypeOne(pgmo, sj) -> int"""
  return _gmomcc.gmoGetVarTypeOne(*args)

def gmoSetAltVarType(*args):
  """gmoSetAltVarType(pgmo, nintvec) -> int"""
  return _gmomcc.gmoSetAltVarType(*args)

def gmoSetAltVarTypeOne(*args):
  """gmoSetAltVarTypeOne(pgmo, sj, vtyp)"""
  return _gmomcc.gmoSetAltVarTypeOne(*args)

def gmoGetVarStat(*args):
  """gmoGetVarStat(pgmo, nintvec)"""
  return _gmomcc.gmoGetVarStat(*args)

def gmoGetVarStatOne(*args):
  """gmoGetVarStatOne(pgmo, sj) -> int"""
  return _gmomcc.gmoGetVarStatOne(*args)

def gmoSetVarStat(*args):
  """gmoSetVarStat(pgmo, nintvec)"""
  return _gmomcc.gmoSetVarStat(*args)

def gmoSetVarStatOne(*args):
  """gmoSetVarStatOne(pgmo, sj, vstat)"""
  return _gmomcc.gmoSetVarStatOne(*args)

def gmoGetVarCStat(*args):
  """gmoGetVarCStat(pgmo, nintvec)"""
  return _gmomcc.gmoGetVarCStat(*args)

def gmoGetVarCStatOne(*args):
  """gmoGetVarCStatOne(pgmo, sj) -> int"""
  return _gmomcc.gmoGetVarCStatOne(*args)

def gmoSetVarCStat(*args):
  """gmoSetVarCStat(pgmo, nintvec)"""
  return _gmomcc.gmoSetVarCStat(*args)

def gmoGetVarPrior(*args):
  """gmoGetVarPrior(pgmo, ndblvec) -> int"""
  return _gmomcc.gmoGetVarPrior(*args)

def gmoGetVarPriorOne(*args):
  """gmoGetVarPriorOne(pgmo, sj) -> double"""
  return _gmomcc.gmoGetVarPriorOne(*args)

def gmoGetVarScale(*args):
  """gmoGetVarScale(pgmo, ndblvec) -> int"""
  return _gmomcc.gmoGetVarScale(*args)

def gmoGetVarScaleOne(*args):
  """gmoGetVarScaleOne(pgmo, sj) -> double"""
  return _gmomcc.gmoGetVarScaleOne(*args)

def gmoGetVarStageOne(*args):
  """gmoGetVarStageOne(pgmo, sj) -> double"""
  return _gmomcc.gmoGetVarStageOne(*args)

def gmoGetSosConstraints(*args):
  """gmoGetSosConstraints(pgmo, sostype, sosbeg, sosind, soswt) -> int"""
  return _gmomcc.gmoGetSosConstraints(*args)

def gmoGetVarSosSetOne(*args):
  """gmoGetVarSosSetOne(pgmo, sj) -> int"""
  return _gmomcc.gmoGetVarSosSetOne(*args)

def gmoGetColSparse(*args):
  """gmoGetColSparse(pgmo, sj, rowidx, jacval, nlflag) -> int"""
  return _gmomcc.gmoGetColSparse(*args)

def gmoGetColJacInfoOne(*args):
  """gmoGetColJacInfoOne(pgmo, sj, jacptr)"""
  return _gmomcc.gmoGetColJacInfoOne(*args)

def gmoGetVarIntDotOpt(*args):
  """gmoGetVarIntDotOpt(pgmo, optptr, dotopt, optvals) -> int"""
  return _gmomcc.gmoGetVarIntDotOpt(*args)

def gmoGetVarDblDotOpt(*args):
  """gmoGetVarDblDotOpt(pgmo, optptr, dotopt, optvals) -> int"""
  return _gmomcc.gmoGetVarDblDotOpt(*args)

def gmoEvalErrorMsg(*args):
  """gmoEvalErrorMsg(pgmo, domsg)"""
  return _gmomcc.gmoEvalErrorMsg(*args)

def gmoEvalErrorMsg_MT(*args):
  """gmoEvalErrorMsg_MT(pgmo, domsg, tidx)"""
  return _gmomcc.gmoEvalErrorMsg_MT(*args)

def gmoEvalErrorMaskLevel(*args):
  """gmoEvalErrorMaskLevel(pgmo, MaskLevel)"""
  return _gmomcc.gmoEvalErrorMaskLevel(*args)

def gmoEvalErrorMaskLevel_MT(*args):
  """gmoEvalErrorMaskLevel_MT(pgmo, MaskLevel, tidx)"""
  return _gmomcc.gmoEvalErrorMaskLevel_MT(*args)

def gmoEvalNewPoint(*args):
  """gmoEvalNewPoint(pgmo, x) -> int"""
  return _gmomcc.gmoEvalNewPoint(*args)

def gmoSetExtFuncs(*args):
  """gmoSetExtFuncs(pgmo, extfunmgr)"""
  return _gmomcc.gmoSetExtFuncs(*args)

def gmoEvalFunc(*args):
  """gmoEvalFunc(pgmo, si, x) -> int"""
  return _gmomcc.gmoEvalFunc(*args)

def gmoEvalFunc_MT(*args):
  """gmoEvalFunc_MT(pgmo, si, x, tidx) -> int"""
  return _gmomcc.gmoEvalFunc_MT(*args)

def gmoEvalFuncInt(*args):
  """gmoEvalFuncInt(pgmo, si) -> int"""
  return _gmomcc.gmoEvalFuncInt(*args)

def gmoEvalFuncInt_MT(*args):
  """gmoEvalFuncInt_MT(pgmo, si, tidx) -> int"""
  return _gmomcc.gmoEvalFuncInt_MT(*args)

def gmoEvalFuncNL(*args):
  """gmoEvalFuncNL(pgmo, si, x) -> int"""
  return _gmomcc.gmoEvalFuncNL(*args)

def gmoEvalFuncNL_MT(*args):
  """gmoEvalFuncNL_MT(pgmo, si, x, tidx) -> int"""
  return _gmomcc.gmoEvalFuncNL_MT(*args)

def gmoEvalFuncObj(*args):
  """gmoEvalFuncObj(pgmo, x) -> int"""
  return _gmomcc.gmoEvalFuncObj(*args)

def gmoEvalFuncNLObj(*args):
  """gmoEvalFuncNLObj(pgmo, x) -> int"""
  return _gmomcc.gmoEvalFuncNLObj(*args)

def gmoEvalFuncInterval(*args):
  """gmoEvalFuncInterval(pgmo, si, xmin, xmax) -> int"""
  return _gmomcc.gmoEvalFuncInterval(*args)

def gmoEvalFuncInterval_MT(*args):
  """gmoEvalFuncInterval_MT(pgmo, si, xmin, xmax, tidx) -> int"""
  return _gmomcc.gmoEvalFuncInterval_MT(*args)

def gmoEvalFuncNLCluster(*args):
  """gmoEvalFuncNLCluster(pgmo, si, x, cluster, ncluster, fnl) -> int"""
  return _gmomcc.gmoEvalFuncNLCluster(*args)

def gmoEvalFuncNLCluster_MT(*args):
  """gmoEvalFuncNLCluster_MT(pgmo, si, x, cluster, ncluster, fnl, tidx) -> int"""
  return _gmomcc.gmoEvalFuncNLCluster_MT(*args)

def gmoEvalGrad(*args):
  """gmoEvalGrad(pgmo, si, x, g) -> int"""
  return _gmomcc.gmoEvalGrad(*args)

def gmoEvalGrad_MT(*args):
  """gmoEvalGrad_MT(pgmo, si, x, g, tidx) -> int"""
  return _gmomcc.gmoEvalGrad_MT(*args)

def gmoEvalGradNL(*args):
  """gmoEvalGradNL(pgmo, si, x, g) -> int"""
  return _gmomcc.gmoEvalGradNL(*args)

def gmoEvalGradNL_MT(*args):
  """gmoEvalGradNL_MT(pgmo, si, x, g, tidx) -> int"""
  return _gmomcc.gmoEvalGradNL_MT(*args)

def gmoEvalGradObj(*args):
  """gmoEvalGradObj(pgmo, x, g) -> int"""
  return _gmomcc.gmoEvalGradObj(*args)

def gmoEvalGradNLObj(*args):
  """gmoEvalGradNLObj(pgmo, x, g) -> int"""
  return _gmomcc.gmoEvalGradNLObj(*args)

def gmoEvalGradInterval(*args):
  """gmoEvalGradInterval(pgmo, si, xmin, xmax, gmin, gmax) -> int"""
  return _gmomcc.gmoEvalGradInterval(*args)

def gmoEvalGradInterval_MT(*args):
  """gmoEvalGradInterval_MT(pgmo, si, xmin, xmax, gmin, gmax, tidx) -> int"""
  return _gmomcc.gmoEvalGradInterval_MT(*args)

def gmoEvalGradNLUpdate(*args):
  """gmoEvalGradNLUpdate(pgmo, rhsdelta, dojacupd) -> int"""
  return _gmomcc.gmoEvalGradNLUpdate(*args)

def gmoGetJacUpdate(*args):
  """gmoGetJacUpdate(pgmo, rowidx, colidx, jacval, INOUT) -> int"""
  return _gmomcc.gmoGetJacUpdate(*args)

def gmoHessLoad(*args):
  """gmoHessLoad(pgmo, maxJacMult, INOUT, INOUT) -> int"""
  return _gmomcc.gmoHessLoad(*args)

def gmoHessUnload(*args):
  """gmoHessUnload(pgmo) -> int"""
  return _gmomcc.gmoHessUnload(*args)

def gmoHessDim(*args):
  """gmoHessDim(pgmo, si) -> int"""
  return _gmomcc.gmoHessDim(*args)

def gmoHessNz(*args):
  """gmoHessNz(pgmo, si) -> int"""
  return _gmomcc.gmoHessNz(*args)

def gmoHessStruct(*args):
  """gmoHessStruct(pgmo, si, hridx, hcidx) -> int"""
  return _gmomcc.gmoHessStruct(*args)

def gmoHessValue(*args):
  """gmoHessValue(pgmo, si, hridx, hcidx, x, hessval) -> int"""
  return _gmomcc.gmoHessValue(*args)

def gmoHessVec(*args):
  """gmoHessVec(pgmo, si, x, dx, Wdx) -> int"""
  return _gmomcc.gmoHessVec(*args)

def gmoHessLagStruct(*args):
  """gmoHessLagStruct(pgmo, WRindex, WCindex) -> int"""
  return _gmomcc.gmoHessLagStruct(*args)

def gmoHessLagValue(*args):
  """gmoHessLagValue(pgmo, x, pi, w, objweight, conweight) -> int"""
  return _gmomcc.gmoHessLagValue(*args)

def gmoHessLagVec(*args):
  """gmoHessLagVec(pgmo, x, pi, dx, Wdx, objweight, conweight) -> int"""
  return _gmomcc.gmoHessLagVec(*args)

def gmoLoadEMPInfo(*args):
  """gmoLoadEMPInfo(pgmo, empinfofname) -> int"""
  return _gmomcc.gmoLoadEMPInfo(*args)

def gmoGetEquVI(*args):
  """gmoGetEquVI(pgmo, mintvec) -> int"""
  return _gmomcc.gmoGetEquVI(*args)

def gmoGetEquVIOne(*args):
  """gmoGetEquVIOne(pgmo, si) -> int"""
  return _gmomcc.gmoGetEquVIOne(*args)

def gmoGetVarVI(*args):
  """gmoGetVarVI(pgmo, nintvec) -> int"""
  return _gmomcc.gmoGetVarVI(*args)

def gmoGetVarVIOne(*args):
  """gmoGetVarVIOne(pgmo, sj) -> int"""
  return _gmomcc.gmoGetVarVIOne(*args)

def gmoGetAgentType(*args):
  """gmoGetAgentType(pgmo, agentvec) -> int"""
  return _gmomcc.gmoGetAgentType(*args)

def gmoGetAgentTypeOne(*args):
  """gmoGetAgentTypeOne(pgmo, aidx) -> int"""
  return _gmomcc.gmoGetAgentTypeOne(*args)

def gmoGetBiLevelInfo(*args):
  """gmoGetBiLevelInfo(pgmo, nintvec, mintvec) -> int"""
  return _gmomcc.gmoGetBiLevelInfo(*args)

def gmoGetHeadnTail(*args):
  """gmoGetHeadnTail(pgmo, htrec) -> double"""
  return _gmomcc.gmoGetHeadnTail(*args)

def gmoSetHeadnTail(*args):
  """gmoSetHeadnTail(pgmo, htrec, dval)"""
  return _gmomcc.gmoSetHeadnTail(*args)

def gmoSetSolutionPrimal(*args):
  """gmoSetSolutionPrimal(pgmo, x) -> int"""
  return _gmomcc.gmoSetSolutionPrimal(*args)

def gmoSetSolution2(*args):
  """gmoSetSolution2(pgmo, x, pi) -> int"""
  return _gmomcc.gmoSetSolution2(*args)

def gmoSetSolution(*args):
  """gmoSetSolution(pgmo, x, dj, pi, e) -> int"""
  return _gmomcc.gmoSetSolution(*args)

def gmoSetSolution8(*args):
  """gmoSetSolution8(pgmo, x, dj, pi, e, xb, xs, yb, ys) -> int"""
  return _gmomcc.gmoSetSolution8(*args)

def gmoSetSolutionFixer(*args):
  """gmoSetSolutionFixer(pgmo, modelstathint, x, pi, xb, yb, infTol, optTol) -> int"""
  return _gmomcc.gmoSetSolutionFixer(*args)

def gmoGetSolutionVarRec(*args):
  """gmoGetSolutionVarRec(pgmo, sj) -> int"""
  return _gmomcc.gmoGetSolutionVarRec(*args)

def gmoSetSolutionVarRec(*args):
  """gmoSetSolutionVarRec(pgmo, sj, vl, vmarg, vstat, vcstat) -> int"""
  return _gmomcc.gmoSetSolutionVarRec(*args)

def gmoGetSolutionEquRec(*args):
  """gmoGetSolutionEquRec(pgmo, si) -> int"""
  return _gmomcc.gmoGetSolutionEquRec(*args)

def gmoSetSolutionEquRec(*args):
  """gmoSetSolutionEquRec(pgmo, si, el, emarg, estat, ecstat) -> int"""
  return _gmomcc.gmoSetSolutionEquRec(*args)

def gmoSetSolutionStatus(*args):
  """gmoSetSolutionStatus(pgmo, xb, xs, yb, ys) -> int"""
  return _gmomcc.gmoSetSolutionStatus(*args)

def gmoCompleteObjective(*args):
  """gmoCompleteObjective(pgmo, locobjval)"""
  return _gmomcc.gmoCompleteObjective(*args)

def gmoCompleteSolution(*args):
  """gmoCompleteSolution(pgmo) -> int"""
  return _gmomcc.gmoCompleteSolution(*args)

def gmoGetAbsoluteGap(*args):
  """gmoGetAbsoluteGap(pgmo) -> double"""
  return _gmomcc.gmoGetAbsoluteGap(*args)

def gmoGetRelativeGap(*args):
  """gmoGetRelativeGap(pgmo) -> double"""
  return _gmomcc.gmoGetRelativeGap(*args)

def gmoLoadSolutionLegacy(*args):
  """gmoLoadSolutionLegacy(pgmo) -> int"""
  return _gmomcc.gmoLoadSolutionLegacy(*args)

def gmoUnloadSolutionLegacy(*args):
  """gmoUnloadSolutionLegacy(pgmo) -> int"""
  return _gmomcc.gmoUnloadSolutionLegacy(*args)

def gmoLoadSolutionGDX(*args):
  """gmoLoadSolutionGDX(pgmo, gdxfname, dorows, docols, doht) -> int"""
  return _gmomcc.gmoLoadSolutionGDX(*args)

def gmoUnloadSolutionGDX(*args):
  """gmoUnloadSolutionGDX(pgmo, gdxfname, dorows, docols, doht) -> int"""
  return _gmomcc.gmoUnloadSolutionGDX(*args)

def gmoPrepareAllSolToGDX(*args):
  """gmoPrepareAllSolToGDX(pgmo, gdxfname, scengdx, dictid) -> int"""
  return _gmomcc.gmoPrepareAllSolToGDX(*args)

def gmoAddSolutionToGDX(*args):
  """gmoAddSolutionToGDX(pgmo, scenuel_in) -> int"""
  return _gmomcc.gmoAddSolutionToGDX(*args)

def gmoWriteSolDone(*args):
  """gmoWriteSolDone(pgmo) -> int"""
  return _gmomcc.gmoWriteSolDone(*args)

def gmoCheckSolPoolUEL(*args):
  """gmoCheckSolPoolUEL(pgmo, prefix, INOUT) -> int"""
  return _gmomcc.gmoCheckSolPoolUEL(*args)

def gmoPrepareSolPoolMerge(*args):
  """gmoPrepareSolPoolMerge(pgmo, gdxfname, numsol, prefix) -> void *"""
  return _gmomcc.gmoPrepareSolPoolMerge(*args)

def gmoPrepareSolPoolNextSym(*args):
  """gmoPrepareSolPoolNextSym(pgmo, handle) -> int"""
  return _gmomcc.gmoPrepareSolPoolNextSym(*args)

def gmoUnloadSolPoolSolution(*args):
  """gmoUnloadSolPoolSolution(pgmo, handle, numsol) -> int"""
  return _gmomcc.gmoUnloadSolPoolSolution(*args)

def gmoFinalizeSolPoolMerge(*args):
  """gmoFinalizeSolPoolMerge(pgmo, handle) -> int"""
  return _gmomcc.gmoFinalizeSolPoolMerge(*args)

def gmoGetVarTypeTxt(*args):
  """gmoGetVarTypeTxt(pgmo, sj) -> int"""
  return _gmomcc.gmoGetVarTypeTxt(*args)

def gmoGetEquTypeTxt(*args):
  """gmoGetEquTypeTxt(pgmo, si) -> int"""
  return _gmomcc.gmoGetEquTypeTxt(*args)

def gmoGetSolveStatusTxt(*args):
  """gmoGetSolveStatusTxt(pgmo, solvestat) -> int"""
  return _gmomcc.gmoGetSolveStatusTxt(*args)

def gmoGetModelStatusTxt(*args):
  """gmoGetModelStatusTxt(pgmo, modelstat) -> int"""
  return _gmomcc.gmoGetModelStatusTxt(*args)

def gmoGetModelTypeTxt(*args):
  """gmoGetModelTypeTxt(pgmo) -> int"""
  return _gmomcc.gmoGetModelTypeTxt(*args)

def gmoGetHeadNTailTxt(*args):
  """gmoGetHeadNTailTxt(pgmo, htrec) -> int"""
  return _gmomcc.gmoGetHeadNTailTxt(*args)

def gmoMemUsed(*args):
  """gmoMemUsed(pgmo) -> double"""
  return _gmomcc.gmoMemUsed(*args)

def gmoPeakMemUsed(*args):
  """gmoPeakMemUsed(pgmo) -> double"""
  return _gmomcc.gmoPeakMemUsed(*args)

def gmoSetNLObject(*args):
  """gmoSetNLObject(pgmo, nlobject, nlpool) -> int"""
  return _gmomcc.gmoSetNLObject(*args)

def gmoDumpQMakerGDX(*args):
  """gmoDumpQMakerGDX(pgmo, gdxfname) -> int"""
  return _gmomcc.gmoDumpQMakerGDX(*args)

def gmoGetVarEquMap(*args):
  """gmoGetVarEquMap(pgmo, maptype, optptr, strict, INOUT, rowindex, colindex, mapval) -> int"""
  return _gmomcc.gmoGetVarEquMap(*args)

def gmoGetIndicatorMap(*args):
  """gmoGetIndicatorMap(pgmo, optptr, indicstrict, INOUT, rowindic, colindic, indiconval) -> int"""
  return _gmomcc.gmoGetIndicatorMap(*args)

def gmoCrudeness(*args):
  """gmoCrudeness(pgmo) -> int"""
  return _gmomcc.gmoCrudeness(*args)

def gmoDirtyGetRowFNLInstr(*args):
  """gmoDirtyGetRowFNLInstr(pgmo, si, opcode, field) -> int"""
  return _gmomcc.gmoDirtyGetRowFNLInstr(*args)

def gmoDirtyGetObjFNLInstr(*args):
  """gmoDirtyGetObjFNLInstr(pgmo, opcode, field) -> int"""
  return _gmomcc.gmoDirtyGetObjFNLInstr(*args)

def gmoDirtySetRowFNLInstr(*args):
  """gmoDirtySetRowFNLInstr(pgmo, si, len, opcode, field, nlpool, nlpoolvec, len2) -> int"""
  return _gmomcc.gmoDirtySetRowFNLInstr(*args)

def gmoGetExtrLibName(*args):
  """gmoGetExtrLibName(pgmo, libidx) -> char *"""
  return _gmomcc.gmoGetExtrLibName(*args)

def gmoGetExtrLibObjPtr(*args):
  """gmoGetExtrLibObjPtr(pgmo, libidx) -> void *"""
  return _gmomcc.gmoGetExtrLibObjPtr(*args)

def gmoGetExtrLibFuncName(*args):
  """gmoGetExtrLibFuncName(pgmo, libidx, funcidx) -> char *"""
  return _gmomcc.gmoGetExtrLibFuncName(*args)

def gmoLoadExtrLibEntry(*args):
  """gmoLoadExtrLibEntry(pgmo, libidx, name) -> void *"""
  return _gmomcc.gmoLoadExtrLibEntry(*args)

def gmoDict(*args):
  """gmoDict(pgmo) -> void *"""
  return _gmomcc.gmoDict(*args)

def gmoDictSet(*args):
  """gmoDictSet(pgmo, x)"""
  return _gmomcc.gmoDictSet(*args)

def gmoNameModel(*args):
  """gmoNameModel(pgmo) -> char *"""
  return _gmomcc.gmoNameModel(*args)

def gmoNameModelSet(*args):
  """gmoNameModelSet(pgmo, x)"""
  return _gmomcc.gmoNameModelSet(*args)

def gmoModelSeqNr(*args):
  """gmoModelSeqNr(pgmo) -> int"""
  return _gmomcc.gmoModelSeqNr(*args)

def gmoModelSeqNrSet(*args):
  """gmoModelSeqNrSet(pgmo, x)"""
  return _gmomcc.gmoModelSeqNrSet(*args)

def gmoModelType(*args):
  """gmoModelType(pgmo) -> int"""
  return _gmomcc.gmoModelType(*args)

def gmoModelTypeSet(*args):
  """gmoModelTypeSet(pgmo, x)"""
  return _gmomcc.gmoModelTypeSet(*args)

def gmoSense(*args):
  """gmoSense(pgmo) -> int"""
  return _gmomcc.gmoSense(*args)

def gmoSenseSet(*args):
  """gmoSenseSet(pgmo, x)"""
  return _gmomcc.gmoSenseSet(*args)

def gmoIsQP(*args):
  """gmoIsQP(pgmo) -> int"""
  return _gmomcc.gmoIsQP(*args)

def gmoOptFile(*args):
  """gmoOptFile(pgmo) -> int"""
  return _gmomcc.gmoOptFile(*args)

def gmoOptFileSet(*args):
  """gmoOptFileSet(pgmo, x)"""
  return _gmomcc.gmoOptFileSet(*args)

def gmoDictionary(*args):
  """gmoDictionary(pgmo) -> int"""
  return _gmomcc.gmoDictionary(*args)

def gmoDictionarySet(*args):
  """gmoDictionarySet(pgmo, x)"""
  return _gmomcc.gmoDictionarySet(*args)

def gmoScaleOpt(*args):
  """gmoScaleOpt(pgmo) -> int"""
  return _gmomcc.gmoScaleOpt(*args)

def gmoScaleOptSet(*args):
  """gmoScaleOptSet(pgmo, x)"""
  return _gmomcc.gmoScaleOptSet(*args)

def gmoPriorOpt(*args):
  """gmoPriorOpt(pgmo) -> int"""
  return _gmomcc.gmoPriorOpt(*args)

def gmoPriorOptSet(*args):
  """gmoPriorOptSet(pgmo, x)"""
  return _gmomcc.gmoPriorOptSet(*args)

def gmoHaveBasis(*args):
  """gmoHaveBasis(pgmo) -> int"""
  return _gmomcc.gmoHaveBasis(*args)

def gmoHaveBasisSet(*args):
  """gmoHaveBasisSet(pgmo, x)"""
  return _gmomcc.gmoHaveBasisSet(*args)

def gmoModelStat(*args):
  """gmoModelStat(pgmo) -> int"""
  return _gmomcc.gmoModelStat(*args)

def gmoModelStatSet(*args):
  """gmoModelStatSet(pgmo, x)"""
  return _gmomcc.gmoModelStatSet(*args)

def gmoSolveStat(*args):
  """gmoSolveStat(pgmo) -> int"""
  return _gmomcc.gmoSolveStat(*args)

def gmoSolveStatSet(*args):
  """gmoSolveStatSet(pgmo, x)"""
  return _gmomcc.gmoSolveStatSet(*args)

def gmoIsMPSGE(*args):
  """gmoIsMPSGE(pgmo) -> int"""
  return _gmomcc.gmoIsMPSGE(*args)

def gmoIsMPSGESet(*args):
  """gmoIsMPSGESet(pgmo, x)"""
  return _gmomcc.gmoIsMPSGESet(*args)

def gmoObjStyle(*args):
  """gmoObjStyle(pgmo) -> int"""
  return _gmomcc.gmoObjStyle(*args)

def gmoObjStyleSet(*args):
  """gmoObjStyleSet(pgmo, x)"""
  return _gmomcc.gmoObjStyleSet(*args)

def gmoInterface(*args):
  """gmoInterface(pgmo) -> int"""
  return _gmomcc.gmoInterface(*args)

def gmoInterfaceSet(*args):
  """gmoInterfaceSet(pgmo, x)"""
  return _gmomcc.gmoInterfaceSet(*args)

def gmoIndexBase(*args):
  """gmoIndexBase(pgmo) -> int"""
  return _gmomcc.gmoIndexBase(*args)

def gmoIndexBaseSet(*args):
  """gmoIndexBaseSet(pgmo, x)"""
  return _gmomcc.gmoIndexBaseSet(*args)

def gmoObjReform(*args):
  """gmoObjReform(pgmo) -> int"""
  return _gmomcc.gmoObjReform(*args)

def gmoObjReformSet(*args):
  """gmoObjReformSet(pgmo, x)"""
  return _gmomcc.gmoObjReformSet(*args)

def gmoEmptyOut(*args):
  """gmoEmptyOut(pgmo) -> int"""
  return _gmomcc.gmoEmptyOut(*args)

def gmoEmptyOutSet(*args):
  """gmoEmptyOutSet(pgmo, x)"""
  return _gmomcc.gmoEmptyOutSet(*args)

def gmoIgnXCDeriv(*args):
  """gmoIgnXCDeriv(pgmo) -> int"""
  return _gmomcc.gmoIgnXCDeriv(*args)

def gmoIgnXCDerivSet(*args):
  """gmoIgnXCDerivSet(pgmo, x)"""
  return _gmomcc.gmoIgnXCDerivSet(*args)

def gmoUseQ(*args):
  """gmoUseQ(pgmo) -> int"""
  return _gmomcc.gmoUseQ(*args)

def gmoUseQSet(*args):
  """gmoUseQSet(pgmo, x)"""
  return _gmomcc.gmoUseQSet(*args)

def gmoAltBounds(*args):
  """gmoAltBounds(pgmo) -> int"""
  return _gmomcc.gmoAltBounds(*args)

def gmoAltBoundsSet(*args):
  """gmoAltBoundsSet(pgmo, x)"""
  return _gmomcc.gmoAltBoundsSet(*args)

def gmoAltRHS(*args):
  """gmoAltRHS(pgmo) -> int"""
  return _gmomcc.gmoAltRHS(*args)

def gmoAltRHSSet(*args):
  """gmoAltRHSSet(pgmo, x)"""
  return _gmomcc.gmoAltRHSSet(*args)

def gmoAltVarTypes(*args):
  """gmoAltVarTypes(pgmo) -> int"""
  return _gmomcc.gmoAltVarTypes(*args)

def gmoAltVarTypesSet(*args):
  """gmoAltVarTypesSet(pgmo, x)"""
  return _gmomcc.gmoAltVarTypesSet(*args)

def gmoForceLinear(*args):
  """gmoForceLinear(pgmo) -> int"""
  return _gmomcc.gmoForceLinear(*args)

def gmoForceLinearSet(*args):
  """gmoForceLinearSet(pgmo, x)"""
  return _gmomcc.gmoForceLinearSet(*args)

def gmoForceCont(*args):
  """gmoForceCont(pgmo) -> int"""
  return _gmomcc.gmoForceCont(*args)

def gmoForceContSet(*args):
  """gmoForceContSet(pgmo, x)"""
  return _gmomcc.gmoForceContSet(*args)

def gmoPermuteCols(*args):
  """gmoPermuteCols(pgmo) -> int"""
  return _gmomcc.gmoPermuteCols(*args)

def gmoPermuteColsSet(*args):
  """gmoPermuteColsSet(pgmo, x)"""
  return _gmomcc.gmoPermuteColsSet(*args)

def gmoPermuteRows(*args):
  """gmoPermuteRows(pgmo) -> int"""
  return _gmomcc.gmoPermuteRows(*args)

def gmoPermuteRowsSet(*args):
  """gmoPermuteRowsSet(pgmo, x)"""
  return _gmomcc.gmoPermuteRowsSet(*args)

def gmoPinf(*args):
  """gmoPinf(pgmo) -> double"""
  return _gmomcc.gmoPinf(*args)

def gmoPinfSet(*args):
  """gmoPinfSet(pgmo, x)"""
  return _gmomcc.gmoPinfSet(*args)

def gmoMinf(*args):
  """gmoMinf(pgmo) -> double"""
  return _gmomcc.gmoMinf(*args)

def gmoMinfSet(*args):
  """gmoMinfSet(pgmo, x)"""
  return _gmomcc.gmoMinfSet(*args)

def gmoQNaN(*args):
  """gmoQNaN(pgmo) -> double"""
  return _gmomcc.gmoQNaN(*args)

def gmoValNA(*args):
  """gmoValNA(pgmo) -> double"""
  return _gmomcc.gmoValNA(*args)

def gmoValNAInt(*args):
  """gmoValNAInt(pgmo) -> int"""
  return _gmomcc.gmoValNAInt(*args)

def gmoValUndf(*args):
  """gmoValUndf(pgmo) -> double"""
  return _gmomcc.gmoValUndf(*args)

def gmoM(*args):
  """gmoM(pgmo) -> int"""
  return _gmomcc.gmoM(*args)

def gmoQM(*args):
  """gmoQM(pgmo) -> int"""
  return _gmomcc.gmoQM(*args)

def gmoNLM(*args):
  """gmoNLM(pgmo) -> int"""
  return _gmomcc.gmoNLM(*args)

def gmoN(*args):
  """gmoN(pgmo) -> int"""
  return _gmomcc.gmoN(*args)

def gmoNLN(*args):
  """gmoNLN(pgmo) -> int"""
  return _gmomcc.gmoNLN(*args)

def gmoNDisc(*args):
  """gmoNDisc(pgmo) -> int"""
  return _gmomcc.gmoNDisc(*args)

def gmoNFixed(*args):
  """gmoNFixed(pgmo) -> int"""
  return _gmomcc.gmoNFixed(*args)

def gmoNZ(*args):
  """gmoNZ(pgmo) -> int"""
  return _gmomcc.gmoNZ(*args)

def gmoNLNZ(*args):
  """gmoNLNZ(pgmo) -> int"""
  return _gmomcc.gmoNLNZ(*args)

def gmoLNZ(*args):
  """gmoLNZ(pgmo) -> int"""
  return _gmomcc.gmoLNZ(*args)

def gmoQNZ(*args):
  """gmoQNZ(pgmo) -> int"""
  return _gmomcc.gmoQNZ(*args)

def gmoGNLNZ(*args):
  """gmoGNLNZ(pgmo) -> int"""
  return _gmomcc.gmoGNLNZ(*args)

def gmoMaxQNZ(*args):
  """gmoMaxQNZ(pgmo) -> int"""
  return _gmomcc.gmoMaxQNZ(*args)

def gmoObjNZ(*args):
  """gmoObjNZ(pgmo) -> int"""
  return _gmomcc.gmoObjNZ(*args)

def gmoObjNLNZ(*args):
  """gmoObjNLNZ(pgmo) -> int"""
  return _gmomcc.gmoObjNLNZ(*args)

def gmoObjQNZ(*args):
  """gmoObjQNZ(pgmo) -> int"""
  return _gmomcc.gmoObjQNZ(*args)

def gmoObjQDiagNZ(*args):
  """gmoObjQDiagNZ(pgmo) -> int"""
  return _gmomcc.gmoObjQDiagNZ(*args)

def gmoNLConst(*args):
  """gmoNLConst(pgmo) -> int"""
  return _gmomcc.gmoNLConst(*args)

def gmoNLConstSet(*args):
  """gmoNLConstSet(pgmo, x)"""
  return _gmomcc.gmoNLConstSet(*args)

def gmoNLCodeSize(*args):
  """gmoNLCodeSize(pgmo) -> int"""
  return _gmomcc.gmoNLCodeSize(*args)

def gmoNLCodeSizeSet(*args):
  """gmoNLCodeSizeSet(pgmo, x)"""
  return _gmomcc.gmoNLCodeSizeSet(*args)

def gmoNLCodeSizeMaxRow(*args):
  """gmoNLCodeSizeMaxRow(pgmo) -> int"""
  return _gmomcc.gmoNLCodeSizeMaxRow(*args)

def gmoObjVar(*args):
  """gmoObjVar(pgmo) -> int"""
  return _gmomcc.gmoObjVar(*args)

def gmoObjVarSet(*args):
  """gmoObjVarSet(pgmo, x)"""
  return _gmomcc.gmoObjVarSet(*args)

def gmoObjRow(*args):
  """gmoObjRow(pgmo) -> int"""
  return _gmomcc.gmoObjRow(*args)

def gmoGetObjOrder(*args):
  """gmoGetObjOrder(pgmo) -> int"""
  return _gmomcc.gmoGetObjOrder(*args)

def gmoObjConst(*args):
  """gmoObjConst(pgmo) -> double"""
  return _gmomcc.gmoObjConst(*args)

def gmoObjJacVal(*args):
  """gmoObjJacVal(pgmo) -> double"""
  return _gmomcc.gmoObjJacVal(*args)

def gmoEvalErrorMethod(*args):
  """gmoEvalErrorMethod(pgmo) -> int"""
  return _gmomcc.gmoEvalErrorMethod(*args)

def gmoEvalErrorMethodSet(*args):
  """gmoEvalErrorMethodSet(pgmo, x)"""
  return _gmomcc.gmoEvalErrorMethodSet(*args)

def gmoEvalMaxThreads(*args):
  """gmoEvalMaxThreads(pgmo) -> int"""
  return _gmomcc.gmoEvalMaxThreads(*args)

def gmoEvalMaxThreadsSet(*args):
  """gmoEvalMaxThreadsSet(pgmo, x)"""
  return _gmomcc.gmoEvalMaxThreadsSet(*args)

def gmoEvalFuncCount(*args):
  """gmoEvalFuncCount(pgmo) -> int"""
  return _gmomcc.gmoEvalFuncCount(*args)

def gmoEvalFuncTimeUsed(*args):
  """gmoEvalFuncTimeUsed(pgmo) -> double"""
  return _gmomcc.gmoEvalFuncTimeUsed(*args)

def gmoEvalGradCount(*args):
  """gmoEvalGradCount(pgmo) -> int"""
  return _gmomcc.gmoEvalGradCount(*args)

def gmoEvalGradTimeUsed(*args):
  """gmoEvalGradTimeUsed(pgmo) -> double"""
  return _gmomcc.gmoEvalGradTimeUsed(*args)

def gmoHessMaxDim(*args):
  """gmoHessMaxDim(pgmo) -> int"""
  return _gmomcc.gmoHessMaxDim(*args)

def gmoHessMaxNz(*args):
  """gmoHessMaxNz(pgmo) -> int"""
  return _gmomcc.gmoHessMaxNz(*args)

def gmoHessLagDim(*args):
  """gmoHessLagDim(pgmo) -> int"""
  return _gmomcc.gmoHessLagDim(*args)

def gmoHessLagNz(*args):
  """gmoHessLagNz(pgmo) -> int"""
  return _gmomcc.gmoHessLagNz(*args)

def gmoHessLagDiagNz(*args):
  """gmoHessLagDiagNz(pgmo) -> int"""
  return _gmomcc.gmoHessLagDiagNz(*args)

def gmoNumVIFunc(*args):
  """gmoNumVIFunc(pgmo) -> int"""
  return _gmomcc.gmoNumVIFunc(*args)

def gmoNumAgents(*args):
  """gmoNumAgents(pgmo) -> int"""
  return _gmomcc.gmoNumAgents(*args)

def gmoNameOptFile(*args):
  """gmoNameOptFile(pgmo) -> char *"""
  return _gmomcc.gmoNameOptFile(*args)

def gmoNameOptFileSet(*args):
  """gmoNameOptFileSet(pgmo, x)"""
  return _gmomcc.gmoNameOptFileSet(*args)

def gmoNameSolFile(*args):
  """gmoNameSolFile(pgmo) -> char *"""
  return _gmomcc.gmoNameSolFile(*args)

def gmoNameSolFileSet(*args):
  """gmoNameSolFileSet(pgmo, x)"""
  return _gmomcc.gmoNameSolFileSet(*args)

def gmoNameXLib(*args):
  """gmoNameXLib(pgmo) -> char *"""
  return _gmomcc.gmoNameXLib(*args)

def gmoNameXLibSet(*args):
  """gmoNameXLibSet(pgmo, x)"""
  return _gmomcc.gmoNameXLibSet(*args)

def gmoNameDict(*args):
  """gmoNameDict(pgmo) -> char *"""
  return _gmomcc.gmoNameDict(*args)

def gmoNameDictSet(*args):
  """gmoNameDictSet(pgmo, x)"""
  return _gmomcc.gmoNameDictSet(*args)

def gmoNameInput(*args):
  """gmoNameInput(pgmo) -> char *"""
  return _gmomcc.gmoNameInput(*args)

def gmoNameOutput(*args):
  """gmoNameOutput(pgmo) -> char *"""
  return _gmomcc.gmoNameOutput(*args)

def gmoPPool(*args):
  """gmoPPool(pgmo) -> void *"""
  return _gmomcc.gmoPPool(*args)

def gmoIOMutex(*args):
  """gmoIOMutex(pgmo) -> void *"""
  return _gmomcc.gmoIOMutex(*args)

def gmoError(*args):
  """gmoError(pgmo) -> int"""
  return _gmomcc.gmoError(*args)

def gmoErrorSet(*args):
  """gmoErrorSet(pgmo, x)"""
  return _gmomcc.gmoErrorSet(*args)

def gmoErrorMessage(*args):
  """gmoErrorMessage(pgmo) -> char *"""
  return _gmomcc.gmoErrorMessage(*args)
GLOBAL_MAX_INDEX_DIM = _gmomcc.GLOBAL_MAX_INDEX_DIM
GLOBAL_UEL_IDENT_SIZE = _gmomcc.GLOBAL_UEL_IDENT_SIZE
ITERLIM_INFINITY = _gmomcc.ITERLIM_INFINITY
GMS_MAX_INDEX_DIM = _gmomcc.GMS_MAX_INDEX_DIM
GMS_UEL_IDENT_SIZE = _gmomcc.GMS_UEL_IDENT_SIZE
GMS_SSSIZE = _gmomcc.GMS_SSSIZE
GMS_VARTYPE_UNKNOWN = _gmomcc.GMS_VARTYPE_UNKNOWN
GMS_VARTYPE_BINARY = _gmomcc.GMS_VARTYPE_BINARY
GMS_VARTYPE_INTEGER = _gmomcc.GMS_VARTYPE_INTEGER
GMS_VARTYPE_POSITIVE = _gmomcc.GMS_VARTYPE_POSITIVE
GMS_VARTYPE_NEGATIVE = _gmomcc.GMS_VARTYPE_NEGATIVE
GMS_VARTYPE_FREE = _gmomcc.GMS_VARTYPE_FREE
GMS_VARTYPE_SOS1 = _gmomcc.GMS_VARTYPE_SOS1
GMS_VARTYPE_SOS2 = _gmomcc.GMS_VARTYPE_SOS2
GMS_VARTYPE_SEMICONT = _gmomcc.GMS_VARTYPE_SEMICONT
GMS_VARTYPE_SEMIINT = _gmomcc.GMS_VARTYPE_SEMIINT
GMS_VARTYPE_MAX = _gmomcc.GMS_VARTYPE_MAX
GMS_EQUTYPE_E = _gmomcc.GMS_EQUTYPE_E
GMS_EQUTYPE_G = _gmomcc.GMS_EQUTYPE_G
GMS_EQUTYPE_L = _gmomcc.GMS_EQUTYPE_L
GMS_EQUTYPE_N = _gmomcc.GMS_EQUTYPE_N
GMS_EQUTYPE_X = _gmomcc.GMS_EQUTYPE_X
GMS_EQUTYPE_C = _gmomcc.GMS_EQUTYPE_C
GMS_EQUTYPE_MAX = _gmomcc.GMS_EQUTYPE_MAX
GMS_VAL_LEVEL = _gmomcc.GMS_VAL_LEVEL
GMS_VAL_MARGINAL = _gmomcc.GMS_VAL_MARGINAL
GMS_VAL_LOWER = _gmomcc.GMS_VAL_LOWER
GMS_VAL_UPPER = _gmomcc.GMS_VAL_UPPER
GMS_VAL_SCALE = _gmomcc.GMS_VAL_SCALE
GMS_VAL_MAX = _gmomcc.GMS_VAL_MAX
sv_valund = _gmomcc.sv_valund
sv_valna = _gmomcc.sv_valna
sv_valpin = _gmomcc.sv_valpin
sv_valmin = _gmomcc.sv_valmin
sv_valeps = _gmomcc.sv_valeps
sv_normal = _gmomcc.sv_normal
sv_acronym = _gmomcc.sv_acronym
GMS_SVIDX_UNDEF = _gmomcc.GMS_SVIDX_UNDEF
GMS_SVIDX_NA = _gmomcc.GMS_SVIDX_NA
GMS_SVIDX_PINF = _gmomcc.GMS_SVIDX_PINF
GMS_SVIDX_MINF = _gmomcc.GMS_SVIDX_MINF
GMS_SVIDX_EPS = _gmomcc.GMS_SVIDX_EPS
GMS_SVIDX_NORMAL = _gmomcc.GMS_SVIDX_NORMAL
GMS_SVIDX_ACR = _gmomcc.GMS_SVIDX_ACR
GMS_SVIDX_MAX = _gmomcc.GMS_SVIDX_MAX
dt_set = _gmomcc.dt_set
dt_par = _gmomcc.dt_par
dt_var = _gmomcc.dt_var
dt_equ = _gmomcc.dt_equ
dt_alias = _gmomcc.dt_alias
GMS_DT_SET = _gmomcc.GMS_DT_SET
GMS_DT_PAR = _gmomcc.GMS_DT_PAR
GMS_DT_VAR = _gmomcc.GMS_DT_VAR
GMS_DT_EQU = _gmomcc.GMS_DT_EQU
GMS_DT_ALIAS = _gmomcc.GMS_DT_ALIAS
GMS_DT_MAX = _gmomcc.GMS_DT_MAX
GMS_SV_UNDEF = _gmomcc.GMS_SV_UNDEF
GMS_SV_NA = _gmomcc.GMS_SV_NA
GMS_SV_PINF = _gmomcc.GMS_SV_PINF
GMS_SV_MINF = _gmomcc.GMS_SV_MINF
GMS_SV_EPS = _gmomcc.GMS_SV_EPS
GMS_SV_ACR = _gmomcc.GMS_SV_ACR
GMS_SV_NAINT = _gmomcc.GMS_SV_NAINT
# This file is compatible with both classic and new-style classes.


